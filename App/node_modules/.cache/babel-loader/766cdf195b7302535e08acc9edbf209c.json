{"ast":null,"code":"var _jsxFileName = \"/Users/jayantmanchanda/that-sounds-interesting/my-app/src/Components/Map.js\";\nimport React from 'react';\nimport DeckGL, { GeoJsonLayer, ArcLayer } from 'deck.gl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson'; //eslint-disable-line\n\nconst AIR_PORTS = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson';\nconst INITIAL_VIEW_STATE = {\n  latitude: 51.47,\n  longitude: 0.45,\n  zoom: 1,\n  bearing: 0,\n  pitch: 30\n};\n\nfunction Map() {\n  const onClick = info => {\n    if (info.object) {\n      // eslint-disable-next-line\n      alert(`${info.object.properties.name} (${info.object.properties.abbrev})`);\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <div style={{ height: '100vh', width: '100vw', position: 'relative' }}>\n    _jsxDEV(DeckGL, {\n      controller: true,\n      initialViewState: INITIAL_VIEW_STATE,\n      children: [/*#__PURE__*/_jsxDEV(GeoJsonLayer, {\n        id: \"base-map\",\n        data: COUNTRIES,\n        stroked: true,\n        filled: true,\n        lineWidthMinPixels: 2,\n        opacity: 0.4,\n        getLineColor: [60, 60, 60],\n        getFillColor: [200, 200, 200]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GeoJsonLayer, {\n        id: \"airports\",\n        data: AIR_PORTS,\n        filled: true,\n        pointRadiusMinPixels: 2,\n        pointRadiusScale: 2000,\n        getPointRadius: f => 11 - f.properties.scalerank,\n        getFillColor: [200, 0, 80, 180],\n        pickable: true,\n        autoHighlight: true,\n        onClick: onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this) // </div>\n\n  );\n}\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/jayantmanchanda/that-sounds-interesting/my-app/src/Components/Map.js"],"names":["React","DeckGL","GeoJsonLayer","ArcLayer","COUNTRIES","AIR_PORTS","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","Map","onClick","info","object","alert","properties","name","abbrev","f","scalerank"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,YAAjB,EAA+BC,QAA/B,QAA+C,SAA/C;;AAEA,MAAMC,SAAS,GAAG,4FAAlB,C,CAAgH;;AAChH,MAAMC,SAAS,GAAG,kFAAlB;AAEA,MAAMC,kBAAkB,GAAG;AAC1BC,EAAAA,QAAQ,EAAE,KADgB;AAE1BC,EAAAA,SAAS,EAAE,IAFe;AAG1BC,EAAAA,IAAI,EAAE,CAHoB;AAI1BC,EAAAA,OAAO,EAAE,CAJiB;AAK1BC,EAAAA,KAAK,EAAE;AALmB,CAA3B;;AAQA,SAASC,GAAT,GAAe;AACd,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACzB,QAAIA,IAAI,CAACC,MAAT,EAAiB;AAChB;AACAC,MAAAA,KAAK,CAAE,GAAEF,IAAI,CAACC,MAAL,CAAYE,UAAZ,CAAuBC,IAAK,KAAIJ,IAAI,CAACC,MAAL,CAAYE,UAAZ,CAAuBE,MAAO,GAAlE,CAAL;AACA;AACD,GALD;;AAOA;AAAA;AACC;AACC,YAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,IAApB;AAA0B,MAAA,gBAAgB,EAAEb,kBAA5C;AAAA,8BACC,QAAC,YAAD;AACC,QAAA,EAAE,EAAC,UADJ;AAEC,QAAA,IAAI,EAAEF,SAFP;AAGC,QAAA,OAAO,EAAE,IAHV;AAIC,QAAA,MAAM,EAAE,IAJT;AAKC,QAAA,kBAAkB,EAAE,CALrB;AAMC,QAAA,OAAO,EAAE,GANV;AAOC,QAAA,YAAY,EAAE,CAAE,EAAF,EAAM,EAAN,EAAU,EAAV,CAPf;AAQC,QAAA,YAAY,EAAE,CAAE,GAAF,EAAO,GAAP,EAAY,GAAZ;AARf;AAAA;AAAA;AAAA;AAAA,cADD,eAWC,QAAC,YAAD;AACC,QAAA,EAAE,EAAC,UADJ;AAEC,QAAA,IAAI,EAAEC,SAFP;AAGC,QAAA,MAAM,EAAE,IAHT;AAIC,QAAA,oBAAoB,EAAE,CAJvB;AAKC,QAAA,gBAAgB,EAAE,IALnB;AAMC,QAAA,cAAc,EAAGe,CAAD,IAAO,KAAKA,CAAC,CAACH,UAAF,CAAaI,SAN1C;AAOC,QAAA,YAAY,EAAE,CAAE,GAAF,EAAO,CAAP,EAAU,EAAV,EAAc,GAAd,CAPf;AAQC,QAAA,QAAQ,EAAE,IARX;AASC,QAAA,aAAa,EAAE,IAThB;AAUC,QAAA,OAAO,EAAER;AAVV;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAoCC;;AApCD;AAsCA;;KA9CQD,G;AAgDT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport DeckGL, { GeoJsonLayer, ArcLayer } from 'deck.gl';\n\nconst COUNTRIES = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_50m_admin_0_scale_rank.geojson'; //eslint-disable-line\nconst AIR_PORTS = 'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson';\n\nconst INITIAL_VIEW_STATE = {\n\tlatitude: 51.47,\n\tlongitude: 0.45,\n\tzoom: 1,\n\tbearing: 0,\n\tpitch: 30\n};\n\nfunction Map() {\n\tconst onClick = (info) => {\n\t\tif (info.object) {\n\t\t\t// eslint-disable-next-line\n\t\t\talert(`${info.object.properties.name} (${info.object.properties.abbrev})`);\n\t\t}\n\t};\n\n\treturn (\n\t\t// <div style={{ height: '100vh', width: '100vw', position: 'relative' }}>\n\t\t\t<DeckGL controller={true} initialViewState={INITIAL_VIEW_STATE}>\n\t\t\t\t<GeoJsonLayer\n\t\t\t\t\tid=\"base-map\"\n\t\t\t\t\tdata={COUNTRIES}\n\t\t\t\t\tstroked={true}\n\t\t\t\t\tfilled={true}\n\t\t\t\t\tlineWidthMinPixels={2}\n\t\t\t\t\topacity={0.4}\n\t\t\t\t\tgetLineColor={[ 60, 60, 60 ]}\n\t\t\t\t\tgetFillColor={[ 200, 200, 200 ]}\n\t\t\t\t/>\n\t\t\t\t<GeoJsonLayer\n\t\t\t\t\tid=\"airports\"\n\t\t\t\t\tdata={AIR_PORTS}\n\t\t\t\t\tfilled={true}\n\t\t\t\t\tpointRadiusMinPixels={2}\n\t\t\t\t\tpointRadiusScale={2000}\n\t\t\t\t\tgetPointRadius={(f) => 11 - f.properties.scalerank}\n\t\t\t\t\tgetFillColor={[ 200, 0, 80, 180 ]}\n\t\t\t\t\tpickable={true}\n\t\t\t\t\tautoHighlight={true}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t/>\n\t\t\t\t{/* <ArcLayer\n        id=\"arcs\"\n        data={AIR_PORTS}\n        dataTransform={(d) => d.features.filter((f) => f.properties.scalerank < 4)}\n        getSourcePosition={f => [-0.4531566, 51.4709959]}\n        getTargetPosition={(f) => f.geometry.coordinates}\n        getSourceColor={[0, 128, 200]}\n        getTargetColor={[200, 0, 80]}\n        getWidth={1}\n      /> */}\n\t\t\t</DeckGL>\n\t\t// </div>\n\t);\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}